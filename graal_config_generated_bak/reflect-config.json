[
  
  {
    "name":"[B"
  },
  {
    "name":"akka.actor.ActorCell",
    "allDeclaredFields":true
  },
  {
    "name":"akka.actor.ActorIdentity"
  },
  {
    "name":"akka.actor.ActorInitializationException"
  },
  {
    "name":"akka.actor.ActorKilledException"
  },
  {
    "name":"akka.actor.ActorRef"
  },
  {
    "name":"akka.actor.ActorSelectionMessage"
  },
  {
    "name":"akka.actor.DefaultSupervisorStrategy",
    "methods":[{ "name":"<init>", "parameterTypes":[] }]
  },
  {
    "name":"akka.actor.Identify"
  },
  {
    "name":"akka.actor.IllegalActorStateException"
  },
  {
    "name":"akka.actor.InvalidActorNameException"
  },
  {
    "name":"akka.actor.InvalidMessageException"
  },
  {
    "name":"akka.actor.Kill$"
  },
  {
    "name":"akka.actor.LightArrayRevolverScheduler",
    "methods":[{ "name":"<init>", "parameterTypes":["com.typesafe.config.Config", "akka.event.LoggingAdapter", "java.util.concurrent.ThreadFactory"] }]
  },
  {
    "name":"akka.actor.LightArrayRevolverScheduler$TaskHolder",
    "fields":[{"name":"task"}]
  },
  {
    "name":"akka.actor.LocalActorRefProvider$Guardian",
    "allDeclaredFields":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"akka.actor.LocalActorRefProvider$SystemGuardian",
    "allDeclaredFields":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"akka.actor.LocalScope$"
  },
  {
    "name":"akka.actor.PoisonPill$"
  },
  {
    "name":"akka.actor.Props$EmptyActor",
    "methods":[{ "name":"<init>", "parameterTypes":[] }]
  },
  {
    "name":"akka.actor.RepointableActorRef",
    "fields":[
      {"name":"_cellDoNotCallMeDirectly"}, 
      {"name":"_lookupDoNotCallMeDirectly"}
    ]
  },
  {
    "name":"akka.actor.Status$Failure"
  },
  {
    "name":"akka.actor.Status$Success"
  },
  {
    "name":"akka.cluster.ClusterActorRefProvider",
    "methods":[{ "name":"<init>", "parameterTypes":["java.lang.String", "akka.actor.ActorSystem$Settings", "akka.event.EventStream", "akka.actor.DynamicAccess"] }]
  },
  {
    "name":"akka.cluster.ClusterCoreDaemon",
    "allDeclaredFields":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"akka.cluster.ClusterCoreSupervisor",
    "allDeclaredFields":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"akka.cluster.ClusterDaemon",
    "allDeclaredFields":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"akka.cluster.ClusterDomainEventPublisher",
    "allDeclaredFields":true,
    "methods":[{ "name":"<init>", "parameterTypes":[] }]
  },
  {
    "name":"akka.cluster.ClusterHeartbeatReceiver",
    "allDeclaredFields":true,
    "methods":[{ "name":"<init>", "parameterTypes":[] }]
  },
  {
    "name":"akka.cluster.ClusterMessage"
  },
  {
    "name":"akka.cluster.ClusterReadView$$anon$1",
    "allDeclaredFields":true
  },
  {
    "name":"akka.cluster.ClusterRemoteWatcher",
    "allDeclaredFields":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"akka.cluster.CoordinatedShutdownLeave",
    "allDeclaredFields":true,
    "methods":[{ "name":"<init>", "parameterTypes":[] }]
  },
  {
    "name":"akka.cluster.JoinConfigCompatCheckCluster",
    "methods":[{ "name":"<init>", "parameterTypes":[] }]
  },
  {
    "name":"akka.cluster.NoDowning",
    "methods":[{ "name":"<init>", "parameterTypes":["akka.actor.ActorSystem"] }]
  },
  {
    "name":"akka.cluster.OnMemberStatusChangedListener",
    "allDeclaredFields":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"akka.cluster.bootstrap.ClusterWatcher",
    "allDeclaredFields":true,
    "methods":[{ "name":"<init>", "parameterTypes":[] }]
  },
  {
    "name":"akka.cluster.client.ClusterClientMessage"
  },
  {
    "name":"akka.cluster.client.protobuf.ClusterClientMessageSerializer",
    "methods":[{ "name":"<init>", "parameterTypes":["akka.actor.ExtendedActorSystem"] }]
  },
  {
    "name":"akka.cluster.ddata.ReplicatedDataSerialization"
  },
  {
    "name":"akka.cluster.ddata.Replicator$ReplicatorMessage"
  },
  {
    "name":"akka.cluster.ddata.protobuf.ReplicatedDataSerializer",
    "methods":[{ "name":"<init>", "parameterTypes":["akka.actor.ExtendedActorSystem"] }]
  },
  {
    "name":"akka.cluster.ddata.protobuf.ReplicatorMessageSerializer",
    "methods":[{ "name":"<init>", "parameterTypes":["akka.actor.ExtendedActorSystem"] }]
  },
  {
    "name":"akka.cluster.protobuf.ClusterMessageSerializer",
    "methods":[{ "name":"<init>", "parameterTypes":["akka.actor.ExtendedActorSystem"] }]
  },
  {
    "name":"akka.cluster.pubsub.DistributedPubSubMediator$Internal$SendToOneSubscriber"
  },
  {
    "name":"akka.cluster.pubsub.DistributedPubSubMessage"
  },
  {
    "name":"akka.cluster.pubsub.protobuf.DistributedPubSubMessageSerializer",
    "methods":[{ "name":"<init>", "parameterTypes":["akka.actor.ExtendedActorSystem"] }]
  },
  {
    "name":"akka.cluster.routing.ClusterRouterPool"
  },
  {
    "name":"akka.cluster.sharding.ClusterShardingSerializable"
  },
  {
    "name":"akka.cluster.sharding.JoinConfigCompatCheckSharding",
    "methods":[{ "name":"<init>", "parameterTypes":[] }]
  },
  {
    "name":"akka.cluster.sharding.protobuf.ClusterShardingMessageSerializer",
    "methods":[{ "name":"<init>", "parameterTypes":["akka.actor.ExtendedActorSystem"] }]
  },
  {
    "name":"akka.cluster.singleton.ClusterSingletonMessage"
  },
  {
    "name":"akka.cluster.singleton.protobuf.ClusterSingletonMessageSerializer",
    "methods":[{ "name":"<init>", "parameterTypes":["akka.actor.ExtendedActorSystem"] }]
  },
  {
    "name":"akka.discovery.kubernetes.KubernetesApiServiceDiscovery",
    "methods":[{ "name":"<init>", "parameterTypes":["akka.actor.ActorSystem"] }]
  },
  {
    "name":"akka.dispatch.AbstractNodeQueue",
    "fields":[{"name":"_tailDoNotCallMeDirectly"}]
  },
  {
    "name":"akka.dispatch.AbstractNodeQueue$Node",
    "fields":[{"name":"_nextDoNotCallMeDirectly"}]
  },
  {
    "name":"akka.dispatch.BoundedControlAwareMessageQueueSemantics"
  },
  {
    "name":"akka.dispatch.BoundedDequeBasedMessageQueueSemantics"
  },
  {
    "name":"akka.dispatch.BoundedMessageQueueSemantics"
  },
  {
    "name":"akka.dispatch.ControlAwareMessageQueueSemantics"
  },
  {
    "name":"akka.dispatch.DequeBasedMessageQueueSemantics"
  },
  {
    "name":"akka.dispatch.Mailbox",
    "fields":[
      {"name":"_statusDoNotCallMeDirectly"}, 
      {"name":"_systemQueueDoNotCallMeDirectly"}
    ]
  },
  {
    "name":"akka.dispatch.MessageDispatcher",
    "fields":[
      {"name":"_inhabitantsDoNotCallMeDirectly"}, 
      {"name":"_shutdownScheduleDoNotCallMeDirectly"}
    ]
  },
  {
    "name":"akka.dispatch.MultipleConsumerSemantics"
  },
  {
    "name":"akka.dispatch.UnboundedControlAwareMessageQueueSemantics"
  },
  {
    "name":"akka.dispatch.UnboundedDequeBasedMessageQueueSemantics"
  },
  {
    "name":"akka.dispatch.UnboundedMailbox",
    "methods":[{ "name":"<init>", "parameterTypes":["akka.actor.ActorSystem$Settings", "com.typesafe.config.Config"] }]
  },
  {
    "name":"akka.dispatch.UnboundedMessageQueueSemantics"
  },
  {
    "name":"akka.dispatch.forkjoin.ForkJoinPool",
    "fields":[
      {"name":"ctl"}, 
      {"name":"indexSeed"}, 
      {"name":"plock"}, 
      {"name":"stealCount"}
    ]
  },
  {
    "name":"akka.dispatch.forkjoin.ForkJoinPool$WorkQueue",
    "fields":[{"name":"qlock"}]
  },
  {
    "name":"akka.dispatch.forkjoin.ForkJoinTask",
    "fields":[{"name":"status"}]
  },
  {
    "name":"akka.dispatch.sysmsg.SystemMessage"
  },
  {
    "name":"akka.event.DeadLetterListener",
    "allDeclaredFields":true,
    "methods":[{ "name":"<init>", "parameterTypes":[] }]
  },
  {
    "name":"akka.event.EventStreamUnsubscriber",
    "allDeclaredFields":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"akka.event.LoggerMailboxType",
    "methods":[{ "name":"<init>", "parameterTypes":["akka.actor.ActorSystem$Settings", "com.typesafe.config.Config"] }]
  },
  {
    "name":"akka.event.LoggerMessageQueueSemantics"
  },
  {
    "name":"akka.event.slf4j.Slf4jLogger",
    "allDeclaredFields":true,
    "methods":[{ "name":"<init>", "parameterTypes":[] }]
  },
  {
    "name":"akka.event.slf4j.Slf4jLoggingFilter",
    "methods":[{ "name":"<init>", "parameterTypes":["akka.actor.ActorSystem$Settings", "akka.event.EventStream"] }]
  },
  {
    "name":"akka.http.impl.engine.client.PoolMasterActor",
    "allDeclaredFields":true,
    "methods":[{ "name":"<init>", "parameterTypes":[] }]
  },
  {
    "name":"akka.io.SelectionHandler",
    "allDeclaredFields":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"akka.io.SelectionHandler$SelectorBasedManager",
    "allDeclaredFields":true
  },
  {
    "name":"akka.io.TcpListener",
    "allDeclaredFields":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"akka.io.TcpManager",
    "allDeclaredFields":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"akka.management.HealthCheckRoutes",
    "methods":[{ "name":"<init>", "parameterTypes":["akka.actor.ExtendedActorSystem"] }]
  },
  {
    "name":"akka.management.cluster.ClusterHttpManagementMessage",
    "allDeclaredFields":true,
    "allPublicMethods":true
  },
  {
    "name":"akka.management.cluster.ClusterHttpManagementRouteProvider$",
    "fields":[{"name":"MODULE$"}]
  },
  {
    "name":"akka.management.cluster.ClusterMember",
    "allDeclaredFields":true,
    "allPublicMethods":true
  },
  {
    "name":"akka.management.cluster.ClusterMembers",
    "allDeclaredFields":true,
    "allPublicMethods":true
  },
  {
    "name":"akka.management.cluster.ClusterUnreachableMember",
    "allDeclaredFields":true,
    "allPublicMethods":true
  },
  {
    "name":"akka.management.cluster.ShardDetails",
    "allDeclaredFields":true,
    "allPublicMethods":true
  },
  {
    "name":"akka.management.cluster.ShardRegionInfo",
    "allDeclaredFields":true,
    "allPublicMethods":true
  },
  {
    "name":"akka.management.cluster.bootstrap.ClusterBootstrap$",
    "fields":[{"name":"MODULE$"}]
  },
  {
    "name":"akka.management.cluster.bootstrap.LowestAddressJoinDecider",
    "methods":[{ "name":"<init>", "parameterTypes":["akka.actor.ActorSystem", "akka.management.cluster.bootstrap.ClusterBootstrapSettings"] }]
  },
  {
    "name":"akka.management.cluster.bootstrap.contactpoint.HttpBootstrapJsonProtocol$ClusterMember",
    "allDeclaredFields":true,
    "allPublicMethods":true
  },
  {
    "name":"akka.management.cluster.bootstrap.contactpoint.HttpBootstrapJsonProtocol$SeedNode",
    "allDeclaredFields":true,
    "allPublicMethods":true
  },
  {
    "name":"akka.management.cluster.bootstrap.contactpoint.HttpBootstrapJsonProtocol$SeedNodes",
    "allDeclaredFields":true,
    "allPublicMethods":true
  },
  {
    "name":"akka.management.cluster.bootstrap.internal.BootstrapCoordinator",
    "allDeclaredFields":true
  },
  {
    "name":"akka.management.cluster.scaladsl.ClusterMembershipCheck",
    "methods":[{ "name":"<init>", "parameterTypes":["akka.actor.ActorSystem"] }]
  },
  {
    "name":"akka.pattern.PromiseActorRef",
    "fields":[
      {"name":"_stateDoNotCallMeDirectly"}, 
      {"name":"_watchedByDoNotCallMeDirectly"}
    ]
  },
  {
    "name":"akka.persistence.serialization.Message"
  },
  {
    "name":"akka.persistence.serialization.MessageSerializer",
    "methods":[{ "name":"<init>", "parameterTypes":["akka.actor.ExtendedActorSystem"] }]
  },
  {
    "name":"akka.persistence.serialization.Snapshot"
  },
  {
    "name":"akka.persistence.serialization.SnapshotSerializer",
    "methods":[{ "name":"<init>", "parameterTypes":["akka.actor.ExtendedActorSystem"] }]
  },
  {
    "name":"akka.protobuf.GeneratedMessage"
  },
  {
    "name":"akka.remote.DaemonMsgCreate"
  },
  {
    "name":"akka.remote.EndpointManager",
    "allDeclaredFields":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"akka.remote.RemoteActorRefProvider$RemotingTerminator",
    "allDeclaredFields":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"akka.remote.RemoteDeploymentWatcher",
    "allDeclaredFields":true,
    "methods":[{ "name":"<init>", "parameterTypes":[] }]
  },
  {
    "name":"akka.remote.RemoteScope"
  },
  {
    "name":"akka.remote.RemoteWatcher",
    "allDeclaredFields":true
  },
  {
    "name":"akka.remote.RemoteWatcher$Heartbeat$"
  },
  {
    "name":"akka.remote.RemoteWatcher$HeartbeatRsp"
  },
  {
    "name":"akka.remote.Remoting$TransportSupervisor",
    "allDeclaredFields":true,
    "methods":[{ "name":"<init>", "parameterTypes":[] }]
  },
  {
    "name":"akka.remote.artery.ArteryMessage"
  },
  {
    "name":"akka.remote.routing.RemoteRouterConfig"
  },
  {
    "name":"akka.remote.serialization.ArteryMessageSerializer",
    "methods":[{ "name":"<init>", "parameterTypes":["akka.actor.ExtendedActorSystem"] }]
  },
  {
    "name":"akka.remote.serialization.ByteStringSerializer",
    "methods":[{ "name":"<init>", "parameterTypes":["akka.actor.ExtendedActorSystem"] }]
  },
  {
    "name":"akka.remote.serialization.DaemonMsgCreateSerializer",
    "methods":[{ "name":"<init>", "parameterTypes":["akka.actor.ExtendedActorSystem"] }]
  },
  {
    "name":"akka.remote.serialization.IntSerializer",
    "methods":[{ "name":"<init>", "parameterTypes":["akka.actor.ExtendedActorSystem"] }]
  },
  {
    "name":"akka.remote.serialization.LongSerializer",
    "methods":[{ "name":"<init>", "parameterTypes":["akka.actor.ExtendedActorSystem"] }]
  },
  {
    "name":"akka.remote.serialization.MessageContainerSerializer",
    "methods":[{ "name":"<init>", "parameterTypes":["akka.actor.ExtendedActorSystem"] }]
  },
  {
    "name":"akka.remote.serialization.MiscMessageSerializer",
    "methods":[{ "name":"<init>", "parameterTypes":["akka.actor.ExtendedActorSystem"] }]
  },
  {
    "name":"akka.remote.serialization.ProtobufSerializer",
    "methods":[{ "name":"<init>", "parameterTypes":["akka.actor.ExtendedActorSystem"] }]
  },
  {
    "name":"akka.remote.serialization.StringSerializer",
    "methods":[{ "name":"<init>", "parameterTypes":["akka.actor.ExtendedActorSystem"] }]
  },
  {
    "name":"akka.remote.serialization.SystemMessageSerializer",
    "methods":[{ "name":"<init>", "parameterTypes":["akka.actor.ExtendedActorSystem"] }]
  },
  {
    "name":"akka.remote.transport.ActorTransportAdapterManager",
    "allDeclaredFields":true
  },
  {
    "name":"akka.remote.transport.AkkaProtocolManager",
    "allDeclaredFields":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"akka.remote.transport.FailureInjectorProvider",
    "methods":[{ "name":"<init>", "parameterTypes":[] }]
  },
  {
    "name":"akka.remote.transport.ThrottlerProvider",
    "methods":[{ "name":"<init>", "parameterTypes":[] }]
  },
  {
    "name":"akka.remote.transport.netty.NettyTransport",
    "methods":[{ "name":"<init>", "parameterTypes":["akka.actor.ExtendedActorSystem", "com.typesafe.config.Config"] }]
  },
  {
    "name":"akka.routing.BalancingPool"
  },
  {
    "name":"akka.routing.BroadcastGroup"
  },
  {
    "name":"akka.routing.BroadcastPool"
  },
  {
    "name":"akka.routing.ConsistentHashingPool",
    "methods":[{ "name":"<init>", "parameterTypes":["com.typesafe.config.Config"] }]
  },
  {
    "name":"akka.routing.DefaultResizer"
  },
  {
    "name":"akka.routing.FromConfig"
  },
  {
    "name":"akka.routing.RandomGroup"
  },
  {
    "name":"akka.routing.RandomPool"
  },
  {
    "name":"akka.routing.RoundRobinGroup"
  },
  {
    "name":"akka.routing.RoundRobinPool",
    "methods":[{ "name":"<init>", "parameterTypes":["com.typesafe.config.Config"] }]
  },
  {
    "name":"akka.routing.RoutedActorCell$RouterActorCreator",
    "allDeclaredConstructors":true
  },
  {
    "name":"akka.routing.RouterActor",
    "allDeclaredFields":true
  },
  {
    "name":"akka.routing.RouterPoolActor",
    "allDeclaredFields":true
  },
  {
    "name":"akka.routing.ScatterGatherFirstCompletedGroup"
  },
  {
    "name":"akka.routing.ScatterGatherFirstCompletedPool"
  },
  {
    "name":"akka.routing.SmallestMailboxPool"
  },
  {
    "name":"akka.routing.TailChoppingGroup"
  },
  {
    "name":"akka.routing.TailChoppingPool"
  },
  {
    "name":"akka.serialization.ByteArraySerializer",
    "methods":[{ "name":"<init>", "parameterTypes":["akka.actor.ExtendedActorSystem"] }]
  },
  {
    "name":"akka.serialization.JavaSerializer",
    "methods":[{ "name":"<init>", "parameterTypes":["akka.actor.ExtendedActorSystem"] }]
  },
  {
    "name":"akka.serialization.SerializationExtension$",
    "fields":[{"name":"MODULE$"}]
  },
  {
    "name":"akka.stream.SinkRef"
  },
  {
    "name":"akka.stream.SourceRef"
  },
  {
    "name":"akka.stream.impl.StreamSupervisor",
    "allDeclaredFields":true
  },
  {
    "name":"akka.stream.impl.fusing.ActorGraphInterpreter",
    "allDeclaredFields":true
  },
  {
    "name":"akka.stream.impl.streamref.StreamRefsProtocol"
  },
  {
    "name":"akka.stream.serialization.StreamRefSerializer",
    "methods":[{ "name":"<init>", "parameterTypes":["akka.actor.ExtendedActorSystem"] }]
  },
  {
    "name":"akka.util.ByteString$ByteString1"
  },
  {
    "name":"akka.util.ByteString$ByteString1C"
  },
  {
    "name":"akka.util.ByteString$ByteStrings"
  },
  {
    "name":"ch.qos.logback.classic.encoder.PatternLayoutEncoder",
    "allPublicMethods":true,
    "methods":[{ "name":"<init>", "parameterTypes":[] }]
  },
  {
    "name":"ch.qos.logback.classic.pattern.DateConverter",
    "methods":[{ "name":"<init>", "parameterTypes":[] }]
  },
  {
    "name":"ch.qos.logback.classic.pattern.ExtendedThrowableProxyConverter",
    "methods":[{ "name":"<init>", "parameterTypes":[] }]
  },
  {
    "name":"ch.qos.logback.classic.pattern.LevelConverter",
    "methods":[{ "name":"<init>", "parameterTypes":[] }]
  },
  {
    "name":"ch.qos.logback.classic.pattern.LineSeparatorConverter",
    "methods":[{ "name":"<init>", "parameterTypes":[] }]
  },
  {
    "name":"ch.qos.logback.classic.pattern.LoggerConverter",
    "methods":[{ "name":"<init>", "parameterTypes":[] }]
  },
  {
    "name":"ch.qos.logback.classic.pattern.MessageConverter",
    "methods":[{ "name":"<init>", "parameterTypes":[] }]
  },
  {
    "name":"ch.qos.logback.classic.pattern.ThreadConverter",
    "methods":[{ "name":"<init>", "parameterTypes":[] }]
  },
  {
    "name":"ch.qos.logback.core.ConsoleAppender",
    "allPublicMethods":true,
    "methods":[{ "name":"<init>", "parameterTypes":[] }]
  },
  {
    "name":"com.typesafe.config.Config"
  },
  {
    "name":"com.typesafe.config.impl.SimpleConfig"
  },
  {
    "name":"com.typesafe.sslconfig.ssl.DefaultHostnameVerifier",
    "methods":[{ "name":"<init>", "parameterTypes":["com.typesafe.sslconfig.util.LoggerFactory"] }]
  },
  {
    "name":"java.io.Serializable"
  },
  {
    "name":"java.lang.Integer"
  },
  {
    "name":"java.lang.Long"
  },
  {
    "name":"java.lang.String",
    "fields":[{"name":"value"}]
  },
  {
    "name":"java.lang.Thread",
    "fields":[{"name":"parkBlocker"}]
  },
  {
    "name":"java.lang.Throwable"
  },
  {
    "name":"java.nio.DirectByteBuffer",
    "methods":[{ "name":"cleaner", "parameterTypes":[] }]
  },
  {
    "name":"java.util.Optional"
  },
  {
    "name":"javax.management.ObjectName"
  },
  {
    "name":"scala.Int"
  },
  {
    "name":"scala.Long"
  },
  {
    "name":"scala.None$"
  },
  {
    "name":"scala.Some"
  },
  {
    "name":"scala.concurrent.Future$InternalCallbackExecutor$",
    "fields":[{"name":"MODULE$"}]
  },
  {
    "name":"sun.misc.Cleaner",
    "methods":[{ "name":"clean", "parameterTypes":[] }]
  },
  {
    "name":"sun.misc.Unsafe",
    "allDeclaredFields":true
  },
  {
    "name":"sun.reflect.Reflection",
    "methods":[{ "name":"getCallerClass", "parameterTypes":["int"] }]
  }
]
